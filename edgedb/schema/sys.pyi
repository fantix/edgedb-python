import edgedb.schema.schema
import edgedb.schema.std

class Database(SystemObject):
    __init__: Any = ...
    __annotations__: Any = ...
    __dataclass_fields__: Any = ...
    __dataclass_params__: Any = ...
    __edb_abstract__: Any = ...
    __edb_bases__: Any = ...
    __edb_name__: Any = ...
    __eq__: Any = ...
    __hash__: Any = ...
    name: str = ...

class ExtensionPackage(SystemObject):
    __init__: Any = ...
    __annotations__: Any = ...
    __dataclass_fields__: Any = ...
    __dataclass_params__: Any = ...
    __edb_abstract__: Any = ...
    __edb_bases__: Any = ...
    __edb_name__: Any = ...
    __eq__: Any = ...
    __hash__: Any = ...
    script: str = ...

class Role(edgedb.schema.schema.InheritingObject, SystemObject):
    __init__: Any = ...
    __annotations__: Any = ...
    __dataclass_fields__: Any = ...
    __dataclass_params__: Any = ...
    __edb_abstract__: Any = ...
    __edb_bases__: Any = ...
    __edb_name__: Any = ...
    __eq__: Any = ...
    __hash__: Any = ...
    is_superuser: bool = ...
    name: str = ...
    password: str = ...
    superuser: bool = ...

class SystemObject(edgedb.schema.schema.AnnotationSubject):
    __init__: Any = ...
    __annotations__: Any = ...
    __dataclass_fields__: Any = ...
    __dataclass_params__: Any = ...
    __edb_abstract__: Any = ...
    __edb_bases__: Any = ...
    __edb_name__: Any = ...
    __eq__: Any = ...
    __hash__: Any = ...

class TransactionIsolation(edgedb.schema.std.anyenum):
    __annotations__: Any = ...
    __edb_abstract__: Any = ...
    __edb_bases__: Any = ...
    __edb_name__: Any = ...

class VersionStage(edgedb.schema.std.anyenum):
    __annotations__: Any = ...
    __edb_abstract__: Any = ...
    __edb_bases__: Any = ...
    __edb_name__: Any = ...
